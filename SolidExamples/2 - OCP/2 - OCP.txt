OCP: Open/Closed Principle
"Software entities should be open for extension but closed for modification."

The key concept of this principle is that the logic of our software should be based on abstractions. This way, when requirements change, modifications can be made simply by adding new code rather than altering existing code.

However, it is impossible to anticipate every possible change, and requirement updates may still break the abstractions we have designed. A great way to minimize this risk is by adopting Extreme Programming practices, which form the foundation of Agile development:

    - TDD (Test-Driven Development)

    - Short development sprints

    - “Features before infrastructure” – frequently showcasing new functionalities to stakeholders

    - Prioritizing the implementation and consolidation of core features

    - Frequent and closely spaced releases
