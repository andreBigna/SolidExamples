ISP: Interface Segregation Principle
"Clients should not be forced to depend upon interfaces that they do not use."

The goal of this principle is to encourage a more modular and composable definition of contracts. Through composition, a class can implement multiple interfaces, enabling only the behaviors it actually needs, rather than being forced to implement unnecessary methods due to a broader, monolithic interface.

Violating ISP often leads to a violation of SRP (Single Responsibility Principle) as well. In monolithic interfaces, it is common to find attributes and methods related to mixed concerns, which should instead be separated into smaller, more focused sub-interfaces.

From an architectural perspective, ISP is crucial because starting with a well-structured interface design makes development more efficientâ€”whether using TDD (Test-Driven Development) or not.
